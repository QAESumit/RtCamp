
// Import required Selenium libraries
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

import java.util.List;
import java.util.concurrent.TimeUnit;

public class SauceDemoTest {

    public static void main(String[] args) {
        // Set up the ChromeDriver path
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");

        // Initialize WebDriver for Chrome
        WebDriver driver = new ChromeDriver();

        // Maximize the browser window
        driver.manage().window().maximize();

        // Set implicit wait time for element location
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

        // Navigate to the SauceDemo login page
        driver.get("https://www.saucedemo.com/");

        // Log in using standard user credentials
        driver.findElement(By.id("user-name")).sendKeys("standard_user");
        driver.findElement(By.id("password")).sendKeys("secret_sauce");
        driver.findElement(By.id("login-button")).click();

        // SCENARIO 1: Verify sorting order Z-A
        // Locate the sorting dropdown
        Select sortDropdown = new Select(driver.findElement(By.className("product_sort_container")));
        // Select 'Name (Z to A)' option
        sortDropdown.selectByVisibleText("Name (Z to A)");

        // Verify the products are sorted Z to A
        List<WebElement> itemNames = driver.findElements(By.className("inventory_item_name"));
        boolean isSortedZA = true;
        for (int i = 0; i < itemNames.size() - 1; i++) {
            if (itemNames.get(i).getText().compareTo(itemNames.get(i + 1).getText()) < 0) {
                isSortedZA = false;
                break;
            }
        }
        System.out.println("Z-A Sorting is " + (isSortedZA ? "correct" : "incorrect"));

        // SCENARIO 2: Verify price order (high to low)
        // Select 'Price (high to low)' option
        sortDropdown.selectByVisibleText("Price (high to low)");

        // Verify the prices are sorted high to low
        List<WebElement> itemPrices = driver.findElements(By.className("inventory_item_price"));
        boolean isSortedHighToLow = true;
        for (int i = 0; i < itemPrices.size() - 1; i++) {
            double price1 = Double.parseDouble(itemPrices.get(i).getText().replace("$", ""));
            double price2 = Double.parseDouble(itemPrices.get(i + 1).getText().replace("$", ""));
            if (price1 < price2) {
                isSortedHighToLow = false;
                break;
            }
        }
        System.out.println("Price Sorting High to Low is " + (isSortedHighToLow ? "correct" : "incorrect"));

        // SCENARIO 3: Add items to cart and validate checkout
        // Add two items to the cart
        driver.findElements(By.className("btn_inventory")).get(0).click();
        driver.findElements(By.className("btn_inventory")).get(1).click();

        // Click the shopping cart icon
        driver.findElement(By.className("shopping_cart_link")).click();

        // Click 'Checkout' button
        driver.findElement(By.id("checkout")).click();

        // Enter checkout information
        driver.findElement(By.id("first-name")).sendKeys("John");
        driver.findElement(By.id("last-name")).sendKeys("Doe");
        driver.findElement(By.id("postal-code")).sendKeys("12345");

        // Click 'Continue' button
        driver.findElement(By.id("continue")).click();

        // Verify checkout overview page is displayed
        boolean isCheckoutDisplayed = driver.findElement(By.id("checkout_summary_container")).isDisplayed();
        System.out.println("Checkout Overview Page is " + (isCheckoutDisplayed ? "displayed" : "not displayed"));

        // Close the browser
        driver.quit();
    }
}

